En webbrowser (eller netlæser) er et computerprogram, der bruges til at hente og vise bl.a. HTML-dokumenter (websider) fra webservere rundt omkring i verden. En delmængde af internettet med disse dokumenter er kendt som World Wide Web.
Kommunikation mellem webserver og webbrowser foregår hovedsagelig med HTTP-protokollen. De fleste webbrowsere understøtter dog også andre protokoller, såsom FTP, gopher og HTTPS (en SSL-krypteret version af HTTP).
Nogle af de populære webbrowsere understøtter også nyhedsgrupper og e-mail ved hjælp af NNTP-, IMAP- og POP3-protokollerne.


== En browsers funktion ==
En browsers opgave er simpelt hen at præsentere en masse koder for brugeren – eller rettere: at vise det, som koderne præsenterer, på en brugervenlig måde. En programmør skriver sin kode i nogle filer, som lægges ud på en server koblet til internettet, og når en bruger forsøger at åbne disse filer, kommer visning 100% an på, hvilken browser, filerne åbnes i.
Programmørens vigtigste opgave er derfor at skrive noget kode, som kan vises korrekt i browseren. Den store udfordring for enhver internetprogrammør i dag er derfor, at der eksisterer utallige browsere, som alle læser og oversætter koden på hver sin måde. En besøger af fx en hjemmeside kan bruge en hvilken som helst browser – det har programmøren ingen kontrol over. Derfor kan programmøren ikke blot udvikle hjemmesiden, så den passer til en enkelt, fx den mest populære, browser. Han risikerer nemlig, at der er problemer med, hvordan hjemmesiden ser ud, i andre browsere – problemer som fx, at bokse står oveni hinanden, eller at en knap ikke fungerer overhovedet.
For at komme dette problem til livs for udviklingen af hjemmesider og HTML har udviklerne af internettet oprettet et konsortium med navnet World Wide Web Consortium eller W3 Consortium (hjemmeside: www.w3.org), som har sat sig for at fastsætte en generel standard for programmering. Her fastsættes det således, hvilke koder der er indenfor standarden, og som man bør benytte. Håbet er nu, at udviklerne af de mange forskellige nuværende og fremtidige browsere efterhånden vil indrette browserne til at benytte sig af disse standarder, så en bestemt programmeringskode fortolkes ens overalt.


== Browsermonopol ==
De enkelte browserudviklere bør i virkeligheden have stor interesse i at følge standarderne, så bestemte websider ikke vises forkert i netop deres browsere som de eneste. Det vil højst sandsynlig give en hvis upopularitet og et frafald af brugere til andre bedre fungerende browsere. Denne "markedskraft" bør i teorien standardisere de forskellige browsere, men der opstår problemer, når enkelte browsere har en meget stor markedsandel og nærmest har monopol. Et eksempel er Microsofts populære browser Internet Explorer.
Da internettet var i sin spæde start, og de første browsere blev udviklet, var konkurrencen ikke stor blandt browserudviklere. Microsoft kom efter nogle år til markedet med en browser, der fungerede glimrende til datidens brug, og de havde så godt som hele markedet i en lang årrække. Men efterhånden blev Microsoft Internet Explorer udvidet med personlige præg på kodefortolkningen – Microsoft opfandt selv nye elementer af fx HTML, som Internet Explorer blev tilpasset til at fortolke, og eksisterende dele af kodesprogene blev fortolket mere eller mindre forkert i forhold til deres oprindelige formål. HTML-tags som < font > blev tilføjet som formateringskoder, og dermed blev den ideelle adskillelse af struktur og layout brudt. Tags som <frame> blev efterhånden meget ofte benyttet til opbygningen af en hjemmeside, hvilket har skabt store problemer senere hen, når browsere, der kun benytter standarden, ikke fortolkede <frame>-elementet, og dermed misfortolkede hele hjemmesidens struktur.
Efterhånden som nyere browsere kom til markedet med deres egne bud på, hvordan en browser skulle fungere, blev forvirringen kun større, og alle kiggede sig om efter en standard at følge.
I dag er problemet med forskellig kodefortolkning i forskellige browsere blevet minimeret kraftigt, og denne udvikling fortsætter. Programmører er stadig nød til at se efter i flere browsere, når de har udviklet hjemmesider o.a., men i dag handler selve browserudviklingen ikke længere om, hvem der fortolker koderne bedst – Det handler derimod om hvem, der giver den bedste brugeroplevelse ved funktioner, ove