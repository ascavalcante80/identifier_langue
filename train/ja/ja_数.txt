数（かず、すう、英: number）とは、
ものの順序を示す語。あるいは、その記号。
個々の事物が、（全体または一定の範囲で）いくつあるか（何回おきるか）ということを表すもの。
ITなど特定の分野においては「数値（すうち）」ともいう。
数とは、順序や量を表すための語（概念）、および その記号（文字）である。
数と数字はしばしば混同され、また混同しても問題がない場合もあるが、本質的には異なる概念であり、数とは物の順序・量などを表現しているのに対して、数字のほうは、その数を表すための記号（文字）である。


== 数の概念編集 ==


=== 数の体系編集 ===
数概念の拡張の歴史
数の概念は人類の歴史とともに次第に拡張されてきた。もっとも素朴な存在としての数は、ものの順番や個数としての自然数である。
ここにゼロ（零）、およびひとつひとつの自然数と一対になっている負の数（負の整数）を加えることで、整数が考えだされた。（この段階ではこれで「全ての数」とも考えられたので「integer」と呼ばれた。もともとintegerとは「全体」とか「欠けの無い」という意味）
さらに整数の商を考えて有理数と拡張され、四則演算が自由に行える体系を得る。有理数から実数への拡張はこのような演算とは異なるギャップを埋めることで得られ、代数方程式の解法を通じて虚数を含む複素数へと拡張された。
自然数 → 整数 → 有理数 → 実数 → 複素数
複素数 - 虚数、実数
複素数 - 代数的数、超越数
実数 - 無理数、有理数
有理数
整数 - 自然数、負の整数
自然数 = 正の整数

フランスの数学者、アンリ・ポアンカレは「数」の定義は難しく、0、1などを厳密に定義するのは難しいと説明している。


=== 様々な拡張法編集 ===
これらを更に別の観点から拡張した体系が存在する。例えば、ものの個数の概念である自然数を拡張して基数が、ものの順番を表す意味での自然数の拡張として順序数が定義される。複素数を更に拡張したものとして、四元数、八元数・十六元数などの体系がある。あるいは、実数に加えて無限小や無限大を含む超実数などの体系もある。
自然数 → 基数
基数 - 有限基数（= 自然数）、無限基数

自然数 → 順序数
順序数 - 有限順序数（= 自然数）、超限順序数

実数 → 複素数 → 四元数 → 八元数 → 十六元数
有理数 → p-進数 （+ 実数 → アデール）
実数 → 超実数


== 記数法編集 ==
数を如何にして数字に表すかという方法は記数法と呼ばれる。同じ数が、さまざまな記数法によって異なる表示をもつことは珍しいことではない。それどころか、ある種の記数法ではその方法だけで表示が一つに定まらないことがある。例えば、十進小数表示では 1 = 0.999... （右辺は、小数点以下の全ての桁が 9）という二通りの表示をもつ。
分数表記
小数表記
指数表記
N進表記


== コンピュータにおける数値編集 ==
デジタルコンピュータでは、全てのデータは内部的には、1/0 という数値の集まり（あるいはスイッチのON/OFFという状態、さらに厳密に言えば High/Lowという2種類の電圧）という形で存在している。ひとつのスイッチのOFF/ONという状態が、数値の0/1と対応しており（同一視する方法で設計されており）、0/1があるので2進数が表現可能となっているのである。ひとつのスイッチ、0/1ひとつ、2進数の1ケタ相当を「1 bit」と言う。ひとつのスイッチがひと桁の2進数に対応するので、スイッチの個数を増やして組み合わせてゆくことで（同タイプのスイッチを並べておいてひとまとまりとして扱うことで）、桁数の多い2進数も表現できる。2進数8ケタを、しばしばひとかたまりとしてとらえて「1 byte（1バイト）」と言う。1byte （＝8 bit）で、28＝256種類の値が表現できる。これの扱い方はいくつかあり、ひとつはこれを0〜255として扱う方法がある。あるいはこれを「-128〜0〜127」という整数などと見なして扱うこと（回路を設計すること）もできる。1byteではわずかこの程度の範囲の整数しか表現できないが、桁数を増やす（bit数、byte数を増やす）ことで、もっと大きな整数を表現できることになる。たとえば2byteならば、-32768〜+32767が表現できる。コンピュータの歴史では、CPUが一度に扱える桁数が 1byte→2byte→4byte→8byteと増すにつれ、大きな桁数の整数を表現し扱うことができるようになってきたのである。 （整数以上の数の表現方法まで説明してゆくとあまりに長文になるので省略するが）ともかくこのようにして、さまざま